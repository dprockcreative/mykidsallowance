<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Allowances', 'default');

/**
 * BaseAllowances
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $label
 * @property integer $period
 * @property timestamp $created
 * @property integer $author_id
 * @property timestamp $updated
 * @property integer $editor_id
 * @property integer $active
 * @property Users $Users
 * @property Doctrine_Collection $AllowanceConfigs
 * @property Doctrine_Collection $Events
 * 
 * @package	##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author	 ##NAME## ##EMAIL##
 * @version	SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAllowances extends Doctrine_Record
{
	public function setTableDefinition()
	{
		$this->setTableName('allowances');
		$this->hasColumn('id', 'integer', 4, array('type' => 'integer', 'length' => 4, 'fixed' => false, 'unsigned' => true, 'primary' => true, 'autoincrement' => true));
		$this->hasColumn('user_id', 'integer', 4, array('type' => 'integer', 'length' => 4, 'fixed' => false, 'unsigned' => true, 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('label', 'string', 45, array('type' => 'string', 'length' => 45, 'fixed' => false, 'unsigned' => false, 'primary' => false, 'notnull' => false, 'autoincrement' => false));
		$this->hasColumn('period', 'integer', 1, array('type' => 'integer', 'length' => 1, 'fixed' => false, 'unsigned' => true, 'primary' => false, 'notnull' => false, 'autoincrement' => false));
		$this->hasColumn('created', 'timestamp', null, array('type' => 'timestamp', 'fixed' => false, 'unsigned' => false, 'primary' => false, 'notnull' => false, 'autoincrement' => false));
		$this->hasColumn('author_id', 'integer', 4, array('type' => 'integer', 'length' => 4, 'fixed' => false, 'unsigned' => true, 'primary' => false, 'default' => '1', 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('updated', 'timestamp', null, array('type' => 'timestamp', 'fixed' => false, 'unsigned' => false, 'primary' => false, 'notnull' => false, 'autoincrement' => false));
		$this->hasColumn('editor_id', 'integer', 4, array('type' => 'integer', 'length' => 4, 'fixed' => false, 'unsigned' => true, 'primary' => false, 'default' => '1', 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('active', 'integer', 1, array('type' => 'integer', 'length' => 1, 'fixed' => false, 'unsigned' => true, 'primary' => false, 'default' => '0', 'notnull' => true, 'autoincrement' => false));
	}

	public function setUp()
	{
		parent::setUp();
		$this->hasOne('Users', array('local' => 'user_id', 'foreign' => 'id'));
		$this->hasMany('AllowanceConfigs', array('local' => 'id', 'foreign' => 'allowance_id'));
		$this->hasMany('Events', array('local' => 'id', 'foreign' => 'allowance_id', 'deferred' => true));
	}
}