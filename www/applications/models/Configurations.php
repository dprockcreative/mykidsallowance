<?php

/**
 * Configurations
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package	##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author	 ##NAME## ##EMAIL##
 * @version	SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Configurations extends BaseConfigurations {

	/**
	 *	Get All by Status
	 */
	public function getConfigurations($user_id = 0) {
		try {
			$query = Doctrine_Query::create()
									->select('c.*')
									->from('Configurations c');

			if( ! empty($user_id) ) {
				$query->andWhere('c.user_id = ?', $user_id);
			}

			$query = $query->execute();

			$count = $query->count();
		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - " . $e);
		}
		return ( empty($count) ) ? null:$query;
	}
	// END


	public function getConfigurationById($id) {
		try {
			$query = Doctrine_Query::create()
									->select('c.*, t.*')
									->from('Configurations c')
									->leftJoin('c.Types t')
									->where('c.id = ?', $id)
									->execute();
		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - " . $e);
		}
		return ( empty($query) ) ? null:$query;
	}

	public function getConfigurationsByUserId($id) {
		try {
			$query = Doctrine_Query::create()
									->select('c.*, t.*')
									->from('Configurations c')
									->leftJoin('c.Types t')
									->where('c.user_id = ?', $id)
									->execute(array(), Doctrine::HYDRATE_ARRAY);
		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - " . $e);
		}
		return ( empty($query) ) ? null:$query;
	}
	// END

	public function getConfigurationsByUserIdSimple($id) {
		try {
			$query = Doctrine::getTable('Configurations')->findByUserId($id);
		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - " . $e);
		}
		return ( empty($query) ) ? null:$query;
	}
	// END

	public function getOptionsByUserId($id) {
		try {
			$query = self::getConfigurationsByUserIdSimple($id);
			$query = $query->toArray();
			if( count($query) > 0 ) {
				$options = array();
				foreach($query as $row) {
					$options[$row['id']] = $row['label'];
				}
			}
		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - " . $e);
		}
		return ( empty($options) ) ? array():$options;
	}
	// END


}
// END CLASS