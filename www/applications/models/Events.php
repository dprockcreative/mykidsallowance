<?php

/**
 * Events
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package	##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author	 ##NAME##
 * @version	SVN: $Id: Builder.php 5441 2009-01-30 22:58:43Z jwage $
 */
class Events extends BaseEvents
{

	public function getEventById($id) {
		try {
			$query = Doctrine::getTable('Events')->find($id);
			$count = $query->count();
		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - " . $e);
		}
		return ( empty($count) ) ? null:$query;
	}


	public function getEventsByAllowanceId($id) {
		try {
			$query = Doctrine_Query::create()
									->select('e.*')
									->from('Events e')
									->where('e.allowance_id = ?', $id)
									->execute();

		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - " . $e);
		}
		return ( empty($query) ) ? null:$query;
	}

	public function getHistoryByAllowanceId($id) {
		try {
			$query = Doctrine_Query::create()
									->select('e.*, ea.*, ec.*, et.*')
									->from('Events e')
									->innerJoin('e.Earnings ea')
									->innerJoin('ea.Configurations ec')
									->innerJoin('ec.Types et')
									->where('e.allowance_id = ?', $id)
									->orderBy('e.created')
									->execute(array(), Doctrine::HYDRATE_ARRAY);

		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - Events & Earnings" . $e);
		}

		if( ! empty($query) ) {
			try {
				$deductions = Doctrine_Query::create()
										->select('e.*, dd.*, dc.*, dt.*')
										->from('Events e')
										->innerJoin('e.Deductions dd')
										->innerJoin('dd.Configurations dc')
										->innerJoin('dc.Types dt')
										->where('e.allowance_id = ?', $id)
										->orderBy('e.created')
										->execute(array(), Doctrine::HYDRATE_ARRAY);

				if( ! empty($deductions) ) {
					$query[0]['Deductions'] = $deductions[0]['Deductions'];
					unset($deductions);
				}

			} catch(Exception $e) {
				Core_Logger::getInstance()->err(__METHOD__ . " - Deductions " . $e);
			}
		}

		return ( empty($query) ) ? null:$query;
	}

	public function getEventsByAllowanceIdInPeriod($id, $period_from, $period_to) {
		try {
			$query = Doctrine_Query::create()
									->select('e.*')
									->from('Events e')
									->where('e.allowance_id = ?', $id)
									->andWhere('e.period_from >= ?', $period_from)
									->andWhere('e.period_to <= ?', $period_to)
									->execute(array(), Doctrine::HYDRATE_ARRAY);

		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - " . $e);
		}
		return ( empty($query) ) ? null:$query;
	}

	public function getOrCreateEventsByAllowanceIdInPeriod($id, $period_from, $period_to) {
		try {
			$query = Doctrine_Query::create()
									->select('e.*')
									->from('Events e')
									->where('e.allowance_id = ?', $id)
									->andWhere('e.period_from >= ?', $period_from)
									->andWhere('e.period_to <= ?', $period_to)
									->execute(array(), Doctrine::HYDRATE_ARRAY);

		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - " . $e);
		}

		if( empty($query) ) {
			$query 	= new Events();
			$data 	= array(
							'allowance_id' 	=> $id,
							'created' 		=> date('Y-m-d H:i:s'),
							'period_from' 	=> $period_from,
							'period_to' 	=> $period_to 
						);
			$query->fromArray($data);
			$query->save();
			$query = $query->toArray();
		}

		return ( isset($query[0]) ) ? $query[0]:$query;
	}

	public function saveEvent($id, $data = array()) {
		try {
			if( empty($id) ) {
				$query = new Events();
				$query->fromArray($data);
				$query->save();
				return ( empty($query) ) ? false:$query->id;
			} else {
				$query = Doctrine::getTable('Users')->find($id);
				$query->fromArray($data);
				$query->save();
				return ( empty($query) ) ? false:true;
			}
		} catch(Exception $e) {
			Core_Logger::getInstance()->err(__METHOD__ . " - " . $e);
		}
	}

		//$event = Doctrine::getTable('Events')->findByAllowanceId($allowance->id, Doctrine::HYDRATE_ARRAY);

}